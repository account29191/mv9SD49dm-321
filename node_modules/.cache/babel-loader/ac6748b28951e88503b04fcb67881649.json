{"ast":null,"code":"var _jsxFileName = \"/Users/don/Desktop/code/clients/selfreact/src/Components/Counters.js\";\nimport React, { Component } from \"react\";\nimport Counter from \"./Counter\";\n\nclass Counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 4\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }, {\n        id: 5,\n        value: 0\n      }]\n    };\n\n    this.handleDelete = counterId => {\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({\n        counters: counters\n      });\n    };\n\n    this.handleReset = () => {\n      const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n      });\n      this.setState({\n        counters\n      });\n    };\n  }\n\n  render() {\n    console.log(\"props\", this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \" \", React.createElement(\"button\", {\n      className: \"resetButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.handleReset)), this.state.counters.map(counter => React.createElement(Counter, {\n      key: counter.id,\n      onDelete: this.handleDelete,\n      value: counter.value,\n      id: counter.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"sources":["/Users/don/Desktop/code/clients/selfreact/src/Components/Counters.js"],"names":["React","Component","Counter","Counters","state","counters","id","value","handleDelete","counterId","filter","c","setState","handleReset","map","render","console","log","props","counter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AACA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACvB;AACNC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADQ,EAER;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFQ,EAGR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHQ,EAIR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAJQ,EAKR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OALQ;AADJ,KADuB;;AAAA,SAW/BC,YAX+B,GAWhBC,SAAS,IAAI;AAC1B,YAAMJ,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBK,MAApB,CAA2BC,CAAC,IAAIA,CAAC,CAACL,EAAF,KAASG,SAAzC,CAAjB;AACA,WAAKG,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAEA;AAAZ,OAAd;AACD,KAd8B;;AAAA,SAgB/BQ,WAhB+B,GAgBjB,MAAM;AAClB,YAAMR,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBS,GAApB,CAAwBH,CAAC,IAAI;AAC5CA,QAAAA,CAAC,CAACJ,KAAF,GAAU,CAAV;AACA,eAAOI,CAAP;AACD,OAHgB,CAAjB;AAIA,WAAKC,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACD,KAtB8B;AAAA;;AAuB/BU,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKC,KAA1B;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEE;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,KAAKL,WAAtC,CAFF,CADF,EAMG,KAAKT,KAAL,CAAWC,QAAX,CAAoBS,GAApB,CAAwBK,OAAO,IAC9B,oBAAC,OAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACb,EADf;AAEE,MAAA,QAAQ,EAAE,KAAKE,YAFjB;AAGE,MAAA,KAAK,EAAEW,OAAO,CAACZ,KAHjB;AAIE,MAAA,EAAE,EAAEY,OAAO,CAACb,EAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CANH,CADF;AAiBD;;AA1C8B;;AA6CjC,eAAeH,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Counter from \"./Counter\";\nclass Counters extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 4 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 },\n      { id: 5, value: 0 }\n    ]\n  };\n\n  handleDelete = counterId => {\n    const counters = this.state.counters.filter(c => c.id !== counterId);\n    this.setState({ counters: counters });\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map(c => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({ counters });\n  };\n  render() {\n    console.log(\"props\", this.props);\n    return (\n      <div>\n        <div>\n          {\" \"}\n          <button className=\"resetButton\">{this.handleReset}</button>\n        </div>\n\n        {this.state.counters.map(counter => (\n          <Counter\n            key={counter.id}\n            onDelete={this.handleDelete}\n            value={counter.value}\n            id={counter.id}\n          ></Counter>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Counters;\n"]},"metadata":{},"sourceType":"module"}