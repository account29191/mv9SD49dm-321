{"ast":null,"code":"var _jsxFileName = \"/Users/don/Desktop/code/clients/selfreact/src/Components/Counter.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      tags: []\n    };\n\n    this.handleIncrement = () => {\n      this.state.count++;\n      this.setState();\n      console.log(\"Increment Clicked\", this.state.count);\n    };\n  }\n\n  renderTags() {\n    if (this.state.tags.length === 0) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"There are no Tags\");\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.state.tags.map(tag => React.createElement(\"li\", {\n      key: tag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, tag)));\n  }\n\n  render() {\n    let title = \"buttonTitle\";\n    title = this.state.count === 0 ? \"buttonTitle\" : \"buttonTitleNotZero\";\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.formatCount()), React.createElement(\"button\", {\n      onClick: this.handleIncrement,\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Increment Count\"), this.state.tags.length === 0 && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Please create tags\"), this.renderTags());\n  }\n\n  formatCount() {\n    const count = this.state.count;\n    return count === 0 ? \"Zero\" : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/don/Desktop/code/clients/selfreact/src/Components/Counter.js"],"names":["React","Component","Counter","state","count","tags","handleIncrement","setState","console","log","renderTags","length","map","tag","render","title","formatCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;;AACA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BE,KAD8B,GACtB;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,IAAI,EAAE;AAFA,KADsB;;AAAA,SAY9BC,eAZ8B,GAYZ,MAAM;AACtB,WAAKH,KAAL,CAAWC,KAAX;AACA,WAAKG,QAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKN,KAAL,CAAWC,KAA5C;AACD,KAhB6B;AAAA;;AAkB9BM,EAAAA,UAAU,GAAG;AACX,QAAI,KAAKP,KAAL,CAAWE,IAAX,CAAgBM,MAAhB,KAA2B,CAA/B,EAAkC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AAClC,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKR,KAAL,CAAWE,IAAX,CAAgBO,GAAhB,CAAoBC,GAAG,IACtB;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,GAAf,CADD,CADH,CADF;AAOD;;AACDC,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAK,GAAG,aAAZ;AACAA,IAAAA,KAAK,GAAG,KAAKZ,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,aAAzB,GAAyC,oBAAjD;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAEW,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,KAAKC,WAAL,EAAzB,CADF,EAEE;AAAQ,MAAA,OAAO,EAAE,KAAKV,eAAtB;AAAuC,MAAA,SAAS,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,EAKG,KAAKH,KAAL,CAAWE,IAAX,CAAgBM,MAAhB,KAA2B,CAA3B,IAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALnC,EAMG,KAAKD,UAAL,EANH,CADF;AAUD;;AAEDM,EAAAA,WAAW,GAAG;AAAA,UACJZ,KADI,GACM,KAAKD,KADX,CACJC,KADI;AAEZ,WAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AA9C6B;;AAgDhC,eAAeF,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nclass Counter extends Component {\n  state = {\n    count: 0,\n    tags: []\n  };\n\n  // constructor(props) {\n  //  super(props);\n  //  this.handleIncrement = this.handleIncrement.bind(this);\n  // }\n  //OR\n\n  handleIncrement = () => {\n    this.state.count++;\n    this.setState();\n    console.log(\"Increment Clicked\", this.state.count);\n  };\n\n  renderTags() {\n    if (this.state.tags.length === 0) return <p>There are no Tags</p>;\n    return (\n      <ul>\n        {this.state.tags.map(tag => (\n          <li key={tag}>{tag}</li>\n        ))}\n      </ul>\n    );\n  }\n  render() {\n    let title = \"buttonTitle\";\n    title = this.state.count === 0 ? \"buttonTitle\" : \"buttonTitleNotZero\";\n    return (\n      <div>\n        <span className={title}>{this.formatCount()}</span>\n        <button onClick={this.handleIncrement} className=\"button\">\n          Increment Count\n        </button>\n        {this.state.tags.length === 0 && <p>Please create tags</p>}\n        {this.renderTags()}\n      </div>\n    );\n  }\n\n  formatCount() {\n    const { count } = this.state;\n    return count === 0 ? \"Zero\" : count;\n  }\n}\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}