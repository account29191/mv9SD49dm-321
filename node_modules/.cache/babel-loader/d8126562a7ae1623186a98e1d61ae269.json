{"ast":null,"code":"var _jsxFileName = \"/Users/don/Desktop/code/clients/selfreact/src/Components/Counter.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: this.props.value,\n      tags: [\"tag1\", \"tag2\", \"tag3\"]\n    };\n\n    this.handleIncrement = product => {\n      this.setState({\n        value: this.state.count + 1\n      });\n      console.log(\"Increment Clicked\", this.state.count);\n    };\n  }\n\n  renderTags() {\n    if (this.state.tags.length === 0) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"There are no Tags\");\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, this.state.tags.map(tag => React.createElement(\"li\", {\n      key: tag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, tag)));\n  }\n\n  render() {\n    let title = \"buttonTitle\";\n    title = this.state.count === 0 ? \"buttonTitle\" : \"buttonTitleNotZero\";\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.formatCount()), React.createElement(\"button\", {\n      onClick: () => this.handleIncrement({\n        id: 1\n      }),\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Increment Count\"), this.state.tags.length === 0 && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Please create tags\"), this.renderTags());\n  }\n\n  formatCount() {\n    const count = this.state.count;\n    return count === 0 ? \"Zero\" : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/don/Desktop/code/clients/selfreact/src/Components/Counter.js"],"names":["React","Component","Counter","state","value","props","tags","handleIncrement","product","setState","count","console","log","renderTags","length","map","tag","render","title","formatCount","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;;AACA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BE,KAD8B,GACtB;AACNC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KADZ;AAENE,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFA,KADsB;;AAAA,SAY9BC,eAZ8B,GAYZC,OAAO,IAAI;AAC3B,WAAKC,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWO,KAAX,GAAmB;AAA5B,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKT,KAAL,CAAWO,KAA5C;AACD,KAf6B;AAAA;;AAiB9BG,EAAAA,UAAU,GAAG;AACX,QAAI,KAAKV,KAAL,CAAWG,IAAX,CAAgBQ,MAAhB,KAA2B,CAA/B,EAAkC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AAClC,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,KAAL,CAAWG,IAAX,CAAgBS,GAAhB,CAAoBC,GAAG,IACtB;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,GAAf,CADD,CADH,CADF;AAOD;;AACDC,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAK,GAAG,aAAZ;AACAA,IAAAA,KAAK,GAAG,KAAKf,KAAL,CAAWO,KAAX,KAAqB,CAArB,GAAyB,aAAzB,GAAyC,oBAAjD;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAEQ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,KAAKC,WAAL,EAAzB,CADF,EAEE;AACE,MAAA,OAAO,EAAE,MAAM,KAAKZ,eAAL,CAAqB;AAAEa,QAAAA,EAAE,EAAE;AAAN,OAArB,CADjB;AAEE,MAAA,SAAS,EAAC,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,EAQG,KAAKjB,KAAL,CAAWG,IAAX,CAAgBQ,MAAhB,KAA2B,CAA3B,IAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BARnC,EASG,KAAKD,UAAL,EATH,CADF;AAaD;;AAEDM,EAAAA,WAAW,GAAG;AAAA,UACJT,KADI,GACM,KAAKP,KADX,CACJO,KADI;AAEZ,WAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AAhD6B;;AAkDhC,eAAeR,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nclass Counter extends Component {\n  state = {\n    value: this.props.value,\n    tags: [\"tag1\", \"tag2\", \"tag3\"]\n  };\n\n  // constructor(props) {\n  //  super(props);\n  //  this.handleIncrement = this.handleIncrement.bind(this);\n  // }\n  //OR\n\n  handleIncrement = product => {\n    this.setState({ value: this.state.count + 1 });\n    console.log(\"Increment Clicked\", this.state.count);\n  };\n\n  renderTags() {\n    if (this.state.tags.length === 0) return <p>There are no Tags</p>;\n    return (\n      <ul>\n        {this.state.tags.map(tag => (\n          <li key={tag}>{tag}</li>\n        ))}\n      </ul>\n    );\n  }\n  render() {\n    let title = \"buttonTitle\";\n    title = this.state.count === 0 ? \"buttonTitle\" : \"buttonTitleNotZero\";\n    return (\n      <div>\n        <span className={title}>{this.formatCount()}</span>\n        <button\n          onClick={() => this.handleIncrement({ id: 1 })}\n          className=\"button\"\n        >\n          Increment Count\n        </button>\n        {this.state.tags.length === 0 && <p>Please create tags</p>}\n        {this.renderTags()}\n      </div>\n    );\n  }\n\n  formatCount() {\n    const { count } = this.state;\n    return count === 0 ? \"Zero\" : count;\n  }\n}\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}